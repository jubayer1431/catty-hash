{"version":3,"sources":["components/Card/Card.jsx","components/CardList/CardList.jsx","components/SearchBox/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","data","className","src","id","alt","name","email","CardList","map","curr","SearchBox","placeholder","handleChange","type","onChange","App","handleSearchChange","e","setState","searchField","target","value","state","a","fetch","json","this","getData","filteredData","filter","toLowerCase","includes","console","log","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAGaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,sBAAKC,UAAW,iBAAhB,UACE,qBACEC,IAAG,+BAA0BF,EAAKG,GAA/B,0BACHC,IAAI,aAEN,mCAAMJ,EAAKK,QACX,4BAAIL,EAAKM,YCNAC,EAAW,SAAC,GAAD,IAAGP,EAAH,EAAGA,KAAH,OACtB,qBAAKC,UAAW,WAAhB,SACGD,EAAKQ,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CAAoBT,KAAMS,GAAfA,EAAKN,UCJTO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBAAOX,UAAW,SAAUY,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCE1EG,E,kDACJ,aAAe,IAAD,8BACZ,gBAoBFC,mBAAqB,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAnBhE,EAAKC,MAAQ,CACXtB,KAAM,GACNmB,YAAa,IAJH,E,kFAQd,4BAAAI,EAAA,sEACmBC,MAAM,8CADzB,cACMxB,EADN,gBAEeA,EAAKyB,OAFpB,OAEEzB,EAFF,OAGE0B,KAAKR,SAAS,CAAElB,SAHlB,gD,qFAMA,WACE0B,KAAKC,Y,oBAQP,WACE,MAA8BD,KAAKJ,MAA3BH,EAAR,EAAQA,YACFS,EADN,EAAqB5B,KACK6B,QAAO,SAACpB,GAAD,OAAUA,EAAKJ,KAAKyB,cAAcC,SAASZ,EAAYW,kBAGxF,OAFAE,QAAQC,IAAIL,GAGV,sBAAK3B,UAAU,MAAf,UACE,oBAAIA,UAAW,SAAf,wBAGA,cAAC,EAAD,CAAWU,YAAa,iBAAkBC,aAAcc,KAAKV,qBAC7D,cAAC,EAAD,CAAUhB,KAAM4B,W,GAnCNM,IAAMC,WAyCTpB,ICnCAqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.83f75010.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.css\";\n\nexport const Card = ({ data }) => (\n  <div className={\"card-container\"}>\n    <img\n      src={`https://robohash.org/${data.id}?set=set4&size=120x120`}\n      alt=\"Cat Hash\"\n    />\n    <h1> {data.name}</h1>\n    <p>{data.email}</p>\n  </div>\n);\n","import React from \"react\";\nimport \"./cardList.css\";\nimport { Card } from \"../Card/Card\";\n\nexport const CardList = ({ data }) => (\n  <div className={\"cardList\"}>\n    {data.map((curr) => (\n      <Card key={curr.id} data={curr} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport './searchBox.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input className={'search'} type=\"search\" placeholder={placeholder} onChange={handleChange} />\n);\n","import './App.css';\nimport React from 'react';\n\nimport { CardList } from './components/CardList/CardList';\nimport { SearchBox } from './components/SearchBox/SearchBox';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      searchField: '',\n    };\n  }\n\n  async getData() {\n    let data = await fetch('https://jsonplaceholder.typicode.com/users');\n    data = await data.json();\n    this.setState({ data });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  // This keyword is always depends on where it's called. That's why we used arrow function instead of normal function\n  // handleSearchChange(e) { this.setState({ searchField: e.target.value }); }\n\n  handleSearchChange = (e) => this.setState({ searchField: e.target.value });\n\n  render() {\n    const { searchField, data } = this.state;\n    const filteredData = data.filter((curr) => curr.name.toLowerCase().includes(searchField.toLowerCase()));\n    console.log(filteredData);\n\n    return (\n      <div className=\"App\">\n        <h1 className={'header'}>Catty Hash</h1>\n\n        {/*<SearchBox placeholder={'Search by name'} handleChange={this.handleSearchChange.bind(this)} />*/}\n        <SearchBox placeholder={'Search by name'} handleChange={this.handleSearchChange} />\n        <CardList data={filteredData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}